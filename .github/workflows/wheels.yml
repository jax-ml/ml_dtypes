name: Build

on:
  workflow_dispatch: {}  # allows triggering this workflow manually
  push:
    branches:
      - main  # trigger on commits to main branch
    tags:
      - v*  # trigger on pushing of tag matching this pattern
  pull_request:  # pre-submit trigger on pull requests affecting this file
    branches:
      - main
    paths:
      - '**workflows/wheels.yml'
  # In the future we could automatically trigger this on release.
  # release:
  #   types:
  #     - published

jobs:
  # TODO(jakevdp) uncomment this
  # build_wheels:
  #   name: Build wheels on ${{ matrix.os }}
  #   runs-on: ${{ matrix.os }}
  #   strategy:
  #     matrix:
  #       os: [ubuntu-20.04, macOS-11, windows-2019]

  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         submodules: true

  #     # Used to host cibuildwheel
  #     - uses: actions/setup-python@v4
  #       with:
  #         python-version: "3.9"

  #     - name: Install cibuildwheel
  #       run: python -m pip install cibuildwheel==2.12.1

  #     - name: Build wheels
  #       run: python -m cibuildwheel --output-dir wheelhouse
  #       env:
  #         CIBW_BUILD: cp38-* cp39-* cp310-* cp311-*
  #         CIBW_SKIP: "*musllinux* *i686* *win32*"
  #         CIBW_TEST_REQUIRES: absl-py pytest pytest-xdist
  #         CIBW_TEST_COMMAND: pytest -n auto {project}

  #     - uses: actions/upload-artifact@v3
  #       with:
  #         path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: Build sdist
        run: pipx run build --sdist

      - uses: actions/upload-artifact@v3
        with:
          path: dist/*.tar.gz

  upload_pypi:
    name: Release & Upload to PyPI
    # TODO(jakevdp): add build_wheels
    needs: [build_sdist]  # build_wheels
    runs-on: ubuntu-latest
    # TODO(jakevdp): uncomment this
    # upload to PyPI on every tag starting with 'v'
    # if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    # alternatively, to publish when a GitHub Release is created, use the following rule:
    # if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/download-artifact@v3
        with:
          # unpacks default artifact into dist/
          # if `name: artifact` is omitted, the action will create extra parent dir
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@v1.5.0
        with:
          # TODO(jakevdp): update to prod server
          # Use PyPI test server
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/
